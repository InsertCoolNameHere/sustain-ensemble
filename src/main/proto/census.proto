syntax = "proto3";

import "google/api/http.proto";
import "targeted_census.proto";

option java_multiple_files = true;
option java_package = "org.sustain.census";
option java_outer_classname = "SustainCensus";
//option objc_class_prefix = "";

package census;

service Census {
  rpc GetTotalPopulation (TotalPopulationRequest) returns (TotalPopulationResponse) {}
  rpc GetMedianAge (MedianAgeRequest) returns (MedianAgeResponse) {}
  rpc GetMedianHouseholdIncome (MedianHouseholdIncomeRequest) returns (MedianHouseholdIncomeResponse) {}
  rpc GetPopulationByAge (PopulationByAgeRequest) returns (PopulationByAgeResponse) {}
  rpc GetPoverty (PovertyRequest) returns (PovertyResponse) {}
  rpc GetRace (RaceRequest) returns (RaceResponse) {}

  // targeted queries - return geographical areas that satisfy a given value range of a census feature
  // Example 1: Retrieve all states where (population >= 1,000,000)
  // Example 2: Retrieve all counties where (median household income < $50,000/year)
  rpc ExecuteTargetedQuery(TargetedQueryRequest) returns (TargetedQueryResponse) {}
}

message RaceRequest {
  SpatialTemporalInfo spatialTemporalInfo = 1;
}

message RaceResponse {
  int32 white = 1;
  int32 black = 2;
  int32 americanIndianAndAlaskaNative = 3;
  int32 asianAndPacificIslanderAndOther = 4;
}

message PovertyRequest {
  SpatialTemporalInfo spatialTemporalInfo = 1;
}

message PovertyResponse {
  int32 incomeBelowPovertyLevel = 1;
  int32 incomeAtOrAbovePovertyLevel = 2;
}

message TotalPopulationRequest {
  SpatialTemporalInfo spatialTemporalInfo = 1;
}

message PopulationByAgeRequest {
  SpatialTemporalInfo spatialTemporalInfo = 1;
}

message MedianAgeRequest {
  SpatialTemporalInfo spatialTemporalInfo = 1;
}

message MedianHouseholdIncomeRequest {
  SpatialTemporalInfo spatialTemporalInfo = 1;
}

message BoundingBox {
  double x1 = 1;
  double y1 = 2;
  double x2 = 3;
  double y2 = 4;
}

// geographic information included in every CensusRequest
message SpatialTemporalInfo {
  string resolution = 1; // Example:- 'state', 'county', 'tract'
  oneof SpatialInfo {
    SingleCoordinate singleCoordinate = 2;
    BoundingBox boundingBox = 3;
  }
  Decade decade = 4;
}

message SingleCoordinate {
  double latitude = 1;
  double longitude = 2 ;
}

message TotalPopulationResponse {
  double population = 1;
}

message MedianAgeResponse {
  double medianAge = 1;
}

message MedianHouseholdIncomeResponse {
  double medianHouseholdIncome = 1;
}

message PopulationByAgeResponse {
  MaleAgeCategories maleAgeCategories = 1;
  FemaleAgeCategories femaleAgeCategories = 2;
}

message MaleAgeCategories {
  AgeCategories ageCategories = 1;
}

message FemaleAgeCategories {
  AgeCategories ageCategories = 2;
}

message AgeCategories {
  int32 total = 1;
  int32 under5 = 2;
  int32 _5to9 = 3;
  int32 _10to14 = 4;
  int32 _15to17 = 5;
  int32 _18to19 = 6;
  int32 _20 = 7;
  int32 _21 = 8;
  int32 _22to24 = 9;
  int32 _25to29 = 10;
  int32 _30to34 = 11;
  int32 _35to39 = 12;
  int32 _40to44 = 13;
  int32 _45to49 = 14;
  int32 _50to54 = 15;
  int32 _55to59 = 16;
  int32 _60to61 = 17;
  int32 _62to64 = 18;
  int32 _65to66 = 19;
  int32 _67to69 = 20;
  int32 _70to74 = 21;
  int32 _75to79 = 22;
  int32 _80to84 = 23;
  int32 _85andOver = 24;
}

message GeographicInfo {
  // TODO: include GeographicInfo in every CensusResponse
  string geoId = 1;
  string resolution = 2;
}

